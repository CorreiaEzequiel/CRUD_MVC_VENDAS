@model Web_Vendas.Models.Produto

@{
    ViewData["Title"] = "Criar";
}

<h1>Create</h1>

<h4>Produto</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Descricao" class="control-label"></label>
                <input asp-for="Descricao" class="form-control" />
                <span asp-validation-for="Descricao" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Preco" class="control-label"></label>
                <input asp-for="Preco" class="form-control" oninput="return onlyNumbers(event)" />
                <span asp-validation-for="Preco" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <button type="button" class="btn btn-secondary" onclick="window.history.back();">Voltar para lista</button>


</div>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function onlyNumbers(event) {
            var inputValue = event.target.value;
            var sanitizedValue = inputValue.replace(/[^\d.,-]/g, '');
            event.target.value = sanitizedValue;
        }
    </script>
}

